package com.github.zhangruiyu.flutterjsonbeanfactory.workers

import com.intellij.openapi.project.Project
import com.intellij.psi.PsiDocumentManager
import com.intellij.psi.PsiManager
import com.github.zhangruiyu.flutterjsonbeanfactory.file.FileHelpers
import com.github.zhangruiyu.flutterjsonbeanfactory.utils.YamlHelper

/**
 * User: zhangruiyu
 * Date: 2019/12/22
 * Time: 15:34
 */
class FileGenerator(private val project: Project) {

    private var psiManager: PsiManager? = null
    private var documentManager: PsiDocumentManager? = null

    init {
        try {
            psiManager = PsiManager.getInstance(project)
        } catch (ignored: Throwable) {
        }
        try {
            documentManager = PsiDocumentManager.getInstance(project)
        } catch (ignored: Throwable) {
        }
    }

    fun generate() {
        val pubSpecConfig = YamlHelper.getPubSpecConfig(project)
        if (pubSpecConfig?.isFlutterModule == true) {
            psiManager?.let { psiManager ->
                documentManager?.let { documentManager ->
                    val builder = StringBuilder()
                    builder.append("// ignore_for_file: non_constant_identifier_names\n// ignore_for_file: camel_case_types\n// ignore_for_file: prefer_single_quotes\n\n")
                    builder.append("// This file is automatically generated. DO NOT EDIT, all your changes would be lost.\n")
//                builder.append(JsonConvertContent)
//                builder.append("\n")
                    builder.append(getJSONFieldContent())
                    val jsonConvertContent = builder.toString()
                    FileHelpers.getJsonConvertJsonFiledFile(project, pubSpecConfig.generatedPath) { file ->
                        psiManager.findFile(file)?.let { dartFile ->
                            documentManager.getDocument(dartFile)?.let { document ->
                                if (document.text != jsonConvertContent) {
                                    document.setText(jsonConvertContent)
                                    documentManager.commitDocument(document)
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    companion object {


        fun getJSONFieldContent(): String {
            return """
import 'package:meta/meta_meta.dart';

@Target({TargetKind.classType})
class JsonSerializable {
  const JsonSerializable();
}

@Target({TargetKind.field})
class JSONField {
  //Specify the parse field name
  final String? name;

  //Whether to participate in toJson
  final bool? serialize;
  
  //Whether to participate in fromMap
  final bool? deserialize;
  
  //Whether to participate in copyWith
  final bool? copyWith;
  
  //Enumeration or not
  final bool? isEnum;
  
  const JSONField({this.name, this.serialize, this.deserialize, this.isEnum, this.copyWith});
}
"""
        }

    }
}